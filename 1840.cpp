/*
假设 $x_1<x_2<...<x_n$ 且 $x_1$ 与 $x_2$ 互质。考虑所有的单调递增序列，其首项为 $0$ 且相邻两项之差是 $x_1,x_2,...,x_n$ 之一。
例如，当 $n=2$，$x_1=4$，$x_2=7$ 时，序列可以是 $0, 4, 8, 15, 19, 26, 33, 40, 44$。
那么请问不出现在任何序列中最大的数是多少？

第一行，一个正整数 $n$
第二行，一共 $n$ 个整数 $x_1,x_2,...,x_n$

一个整数，表示不出现在任何序列中最大的数

对于 $40\%$ 的数据，$1<n<6$，$x_1>1$，$x_n<1000$；
对于另外 $30\%$ 的数据，$n=2$，$x_n<10^9$；
对于另外 $30\%$ 的数据，$1<n<6$，$1<x_1<10^{6-n}$，$x_2>10^{n+11}$，$x_n<10^{n+12}$。

注意到 $x_1$ 与 $x_2$ 互质，所以 $x_1$ 与 $x_2$ 的最小公倍数为 $x_1x_2$。
因此，对于任意的 $i$，$x_i$ 与 $x_{i+1}$ 的最小公倍数为 $x_ix_{i+1}$。
*/
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll n, x[6], Answer = 1;
int main()
{
    scanf("%lld", &n);
    for (ll i = 1; i <= n; i++)
        scanf("%lld", &x[i]);
    return 0;
}
